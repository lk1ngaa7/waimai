<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapper.OrderListMapper" >
  <resultMap id="BaseResultMap" type="model.OrderList" >
    <id column="oLId" property="olid" jdbcType="INTEGER" />
    <result column="uId" property="uid" jdbcType="INTEGER" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DOUBLE" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="updateTime" property="updatetime" jdbcType="VARCHAR" />
    <result column="pid" property="pid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    oLId, uId, remarks, price, phone, address, status, updateTime, pid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="model.OrderListExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orderlist
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from orderlist
    where oLId = #{olid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from orderlist
    where oLId = #{olid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="model.OrderListExample" >
    delete from orderlist
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="model.OrderList" >
      <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="olid">
          SELECT LAST_INSERT_ID()
      </selectKey>
    insert into orderlist (oLId, uId, remarks, 
      price, phone, address, 
      status, updateTime, pid
      )
    values (#{olid,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{remarks,jdbcType=VARCHAR}, 
      #{price,jdbcType=DOUBLE}, #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{updatetime,jdbcType=VARCHAR}, #{pid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="model.OrderList" >
      <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="olid">
          SELECT LAST_INSERT_ID()
      </selectKey>
    insert into orderlist
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="olid != null" >
        oLId,
      </if>
      <if test="uid != null" >
        uId,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="updatetime != null" >
        updateTime,
      </if>
      <if test="pid != null" >
        pid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="olid != null" >
        #{olid,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=VARCHAR},
      </if>
      <if test="pid != null" >
        #{pid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="model.OrderListExample" resultType="java.lang.Integer" >
    select count(*) from orderlist
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update orderlist
    <set >
      <if test="record.olid != null" >
        oLId = #{record.olid,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null" >
        uId = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.remarks != null" >
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.updatetime != null" >
        updateTime = #{record.updatetime,jdbcType=VARCHAR},
      </if>
      <if test="record.pid != null" >
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update orderlist
    set oLId = #{record.olid,jdbcType=INTEGER},
      uId = #{record.uid,jdbcType=INTEGER},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DOUBLE},
      phone = #{record.phone,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      updateTime = #{record.updatetime,jdbcType=VARCHAR},
      pid = #{record.pid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="model.OrderList" >
    update orderlist
    <set >
      <if test="uid != null" >
        uId = #{uid,jdbcType=INTEGER},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null" >
        updateTime = #{updatetime,jdbcType=VARCHAR},
      </if>
      <if test="pid != null" >
        pid = #{pid,jdbcType=INTEGER},
      </if>
    </set>
    where oLId = #{olid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.OrderList" >
    update orderlist
    set uId = #{uid,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      phone = #{phone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      updateTime = #{updatetime,jdbcType=VARCHAR},
      pid = #{pid,jdbcType=INTEGER}
    where oLId = #{olid,jdbcType=INTEGER}
  </update>
   <select id="getLastInsertId" resultType="java.lang.Integer">
        SELECT LAST_INSERT_ID()
    </select>

    <select id="getSomeByExample" parameterType="model.OrderListExample" resultMap="BaseResultMap">
        <!--
          分页
        -->
        select
         <include refid="Base_Column_List" />
        from orderlist
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        limit #{start},#{amount}
    </select>
    <update id="disposeById" parameterType="java.lang.Integer" >
        update orderList set `status` = 2 where olid = #{olid}
    </update>
</mapper>