<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapper.FoodMapper" >
  <resultMap id="BaseResultMap" type="model.Food" >
    <id column="fId" property="fid" jdbcType="INTEGER" />
    <result column="pId" property="pid" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DOUBLE" />
    <result column="amount" property="amount" jdbcType="INTEGER" />
    <result column="updateTime" property="updatetime" jdbcType="VARCHAR" />
    <result column="banner" property="banner" jdbcType="INTEGER" />
    <result column="imgUrl" property="imgurl" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    fId, pId, name, description, price, amount, updateTime, banner, imgUrl, type
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="model.FoodExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from food
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from food
    where fId = #{fid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from food
    where fId = #{fid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="model.FoodExample" >
    delete from food
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="model.Food" >
    insert into food (fId, pId, name, 
      description, price, amount, 
      updateTime, banner, imgUrl, 
      type)
    values (#{fid,jdbcType=INTEGER}, #{pid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE}, #{amount,jdbcType=INTEGER}, 
      #{updatetime,jdbcType=VARCHAR}, #{banner,jdbcType=INTEGER}, #{imgurl,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="model.Food" >
    insert into food
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="fid != null" >
        fId,
      </if>
      <if test="pid != null" >
        pId,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="updatetime != null" >
        updateTime,
      </if>
      <if test="banner != null" >
        banner,
      </if>
      <if test="imgurl != null" >
        imgUrl,
      </if>
      <if test="type != null" >
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="fid != null" >
        #{fid,jdbcType=INTEGER},
      </if>
      <if test="pid != null" >
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=VARCHAR},
      </if>
      <if test="banner != null" >
        #{banner,jdbcType=INTEGER},
      </if>
      <if test="imgurl != null" >
        #{imgurl,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="model.FoodExample" resultType="java.lang.Integer" >
    select count(*) from food
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update food
    <set >
      <if test="record.fid != null" >
        fId = #{record.fid,jdbcType=INTEGER},
      </if>
      <if test="record.pid != null" >
        pId = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.amount != null" >
        amount = #{record.amount,jdbcType=INTEGER},
      </if>
      <if test="record.updatetime != null" >
        updateTime = #{record.updatetime,jdbcType=VARCHAR},
      </if>
      <if test="record.banner != null" >
        banner = #{record.banner,jdbcType=INTEGER},
      </if>
      <if test="record.imgurl != null" >
        imgUrl = #{record.imgurl,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update food
    set fId = #{record.fid,jdbcType=INTEGER},
      pId = #{record.pid,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DOUBLE},
      amount = #{record.amount,jdbcType=INTEGER},
      updateTime = #{record.updatetime,jdbcType=VARCHAR},
      banner = #{record.banner,jdbcType=INTEGER},
      imgUrl = #{record.imgurl,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="model.Food" >
    update food
    <set >
      <if test="pid != null" >
        pId = #{pid,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null" >
        updateTime = #{updatetime,jdbcType=VARCHAR},
      </if>
      <if test="banner != null" >
        banner = #{banner,jdbcType=INTEGER},
      </if>
      <if test="imgurl != null" >
        imgUrl = #{imgurl,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
    </set>
    where fId = #{fid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.Food" >
    update food
    set pId = #{pid,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      amount = #{amount,jdbcType=INTEGER},
      updateTime = #{updatetime,jdbcType=VARCHAR},
      banner = #{banner,jdbcType=INTEGER},
      imgUrl = #{imgurl,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER}
    where fId = #{fid,jdbcType=INTEGER}
  </update>
     <select id="getSomeByExample" parameterType="model.FoodExample" resultMap="BaseResultMap">
        <!--
          分页
        -->
        select
        <include refid="Base_Column_List" /> from food
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        limit #{start},#{amount}
    </select>
</mapper>